const fs = require('fs');
const path = require('path');
const { updateAdblockLibrary, isLibraryValid } = require('./update-adblock-library.js');

/**
 * Script de teste para verificar a configura√ß√£o da biblioteca anti-adblock
 */

console.log('üß™ Testando configura√ß√£o da biblioteca anti-adblock do Adcash...\n');

// Teste 1: Verificar se o arquivo de biblioteca existe
console.log('1. Verificando arquivo de biblioteca...');
const libraryFile = path.join(__dirname, 'adblock-library.js');
if (fs.existsSync(libraryFile)) {
    console.log('   ‚úÖ Arquivo adblock-library.js existe');
    
    const stats = fs.statSync(libraryFile);
    const fileSize = stats.size;
    const lastModified = stats.mtime;
    
    console.log(`   üìä Tamanho: ${fileSize} bytes`);
    console.log(`   üìÖ √öltima modifica√ß√£o: ${lastModified.toLocaleString()}`);
    
    if (fileSize > 100) {
        console.log('   ‚úÖ Arquivo parece conter dados v√°lidos');
    } else {
        console.log('   ‚ö†Ô∏è  Arquivo muito pequeno, pode precisar de atualiza√ß√£o');
    }
} else {
    console.log('   ‚ùå Arquivo adblock-library.js n√£o encontrado');
}

// Teste 2: Verificar validade da biblioteca
console.log('\n2. Verificando validade da biblioteca...');
if (isLibraryValid()) {
    console.log('   ‚úÖ Biblioteca √© v√°lida (menos de 5 minutos)');
} else {
    console.log('   ‚ö†Ô∏è  Biblioteca precisa ser atualizada');
}

// Teste 3: Testar download da biblioteca
console.log('\n3. Testando download da biblioteca...');
updateAdblockLibrary()
    .then(() => {
        console.log('   ‚úÖ Download e salvamento bem-sucedidos');
        
        // Verificar novamente ap√≥s atualiza√ß√£o
        if (isLibraryValid()) {
            console.log('   ‚úÖ Biblioteca agora √© v√°lida');
        } else {
            console.log('   ‚ùå Biblioteca ainda n√£o √© v√°lida ap√≥s atualiza√ß√£o');
        }
    })
    .catch((error) => {
        console.log('   ‚ùå Erro no download:', error.message);
    });

// Teste 4: Verificar se o arquivo HTML cont√©m as refer√™ncias corretas
console.log('\n4. Verificando integra√ß√£o no HTML...');
const htmlFile = path.join(__dirname, 'blog', 'index.html');
if (fs.existsSync(htmlFile)) {
    const htmlContent = fs.readFileSync(htmlFile, 'utf8');
    
    if (htmlContent.includes('adblock-library.js')) {
        console.log('   ‚úÖ Refer√™ncia √† biblioteca encontrada no HTML');
    } else {
        console.log('   ‚ùå Refer√™ncia √† biblioteca n√£o encontrada no HTML');
    }
    
    if (htmlContent.includes('aclib.runAutoTag')) {
        console.log('   ‚úÖ Script de inicializa√ß√£o encontrado no HTML');
    } else {
        console.log('   ‚ùå Script de inicializa√ß√£o n√£o encontrado no HTML');
    }
    
    if (htmlContent.includes('iolsp9sjjo')) {
        console.log('   ‚úÖ Zone ID configurado corretamente');
    } else {
        console.log('   ‚ùå Zone ID n√£o encontrado no HTML');
    }
} else {
    console.log('   ‚ùå Arquivo blog/index.html n√£o encontrado');
}

console.log('\nüéØ Teste conclu√≠do!');
console.log('\nüìã Pr√≥ximos passos:');
console.log('   1. Configure o cron job ou Windows Task Scheduler');
console.log('   2. Execute o script de atualiza√ß√£o periodicamente');
console.log('   3. Monitore os logs para verificar funcionamento');
console.log('   4. Teste o site para verificar se os an√∫ncios aparecem');
